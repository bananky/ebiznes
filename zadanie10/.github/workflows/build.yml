name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Build backend with Maven
        run: mvn -B package --file server/pom.xml

      - name: Build backend Docker image
        run: |
          docker build -t my-backend-image:latest ./server

      - name: Push backend Docker image to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login myacr.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin
          docker tag my-backend-image:latest myacr.azurecr.io/my-backend-image:latest
          docker push myacr.azurecr.io/my-backend-image:latest

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies and build frontend
        run: |
          cd src
          npm install
          npm run build

      - name: Build frontend Docker image
        run: |
          docker build -t my-frontend-image:latest ./src

      - name: Push frontend Docker image to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login myacr.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin
          docker tag my-frontend-image:latest myacr.azurecr.io/my-frontend-image:latest
          docker push myacr.azurecr.io/my-frontend-image:latest

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes CLI
        uses: azure/setup-kubectl@v1

      - name: Set up Azure credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml

  notify:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: Build and Deployment Notification
          body: |
            The build and deployment process for the project has completed successfully.
          to: ${{ secrets.MAIL_RECIPIENT }}
          from: ${{ secrets.MAIL_USERNAME }}
